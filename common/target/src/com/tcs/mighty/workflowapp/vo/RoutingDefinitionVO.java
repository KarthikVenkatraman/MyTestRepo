// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ValueObject.vsl in andromda-java-cartridge.
//
package com.tcs.mighty.workflowapp.vo;

/**
 * 
 */
public class RoutingDefinitionVO
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 80168566291464767L;

    public RoutingDefinitionVO()
    {
        this.txnId = null;
        this.routingDefinitionId = null;
        this.oldRoutingDefinitionId = null;
        this.buttonName = null;
        this.completedTxnStep = null;
        this.escalateAfter = null;
        this.pendingStepsOverride = null;
        this.pendingTxnSteps = null;
        this.routingCriterion = null;
        this.transitionDirection = null;
        this.deleteParallelFlow = null;
        this.endPoint = null;
        this.qcRoute = null;
        this.previousStepsRequired = null;
    }

    public RoutingDefinitionVO(java.lang.Long txnId, java.lang.Long routingDefinitionId, java.lang.Long oldRoutingDefinitionId, java.lang.String buttonName, java.lang.Long completedTxnStep, java.lang.Long escalateAfter, java.lang.String pendingStepsOverride, java.lang.Long[] pendingTxnSteps, java.lang.String routingCriterion, java.lang.String transitionDirection, java.lang.String deleteParallelFlow,java.lang.String endPoint, java.lang.Long previousStepsRequired, java.lang.String qcRoute)
    {
        this.txnId = txnId;
        this.routingDefinitionId = routingDefinitionId;
        this.oldRoutingDefinitionId = oldRoutingDefinitionId;
        this.buttonName = buttonName;
        this.completedTxnStep = completedTxnStep;
        this.escalateAfter = escalateAfter;
        this.pendingStepsOverride = pendingStepsOverride;
        this.pendingTxnSteps = pendingTxnSteps;
        this.routingCriterion = routingCriterion;
        this.transitionDirection = transitionDirection;
        this.deleteParallelFlow = deleteParallelFlow;
        this.qcRoute=qcRoute;
        this.endPoint=endPoint;
        this.previousStepsRequired = previousStepsRequired;
    }

    public RoutingDefinitionVO(java.lang.Long txnId, java.lang.Long routingDefinitionId, java.lang.Long oldRoutingDefinitionId, java.lang.String buttonName, java.lang.Long completedTxnStep, java.lang.Long escalateAfter, java.lang.String pendingStepsOverride, java.lang.Long[] pendingTxnSteps, java.lang.String routingCriterion, java.lang.String transitionDirection, java.lang.String deleteParallelFlow,java.lang.String endPoint, java.lang.Long previousStepsRequired, java.util.Collection attributesMappingList, java.lang.Long[] userStepForPendingTxnSteps, com.tcs.mighty.workflowapp.vo.MailingOptionsVO mailingOptionsVO, String qcRoute)
    {
        this.txnId = txnId;
        this.routingDefinitionId = routingDefinitionId;
        this.oldRoutingDefinitionId = oldRoutingDefinitionId;
        this.buttonName = buttonName;
        this.completedTxnStep = completedTxnStep;
        this.escalateAfter = escalateAfter;
        this.pendingStepsOverride = pendingStepsOverride;
        this.pendingTxnSteps = pendingTxnSteps;
        this.routingCriterion = routingCriterion;
        this.transitionDirection = transitionDirection;
        this.deleteParallelFlow = deleteParallelFlow;
        this.endPoint=endPoint;
        this.qcRoute=qcRoute;
        this.previousStepsRequired = previousStepsRequired;
        this.attributesMappingList = attributesMappingList;
        this.userStepForPendingTxnSteps = userStepForPendingTxnSteps;
        this.mailingOptionsVO = mailingOptionsVO;
    }

    /**
     * Copies constructor from other RoutingDefinitionVO
     *
     * @param otherBean, cannot be <code>null</code>
     * @throws java.lang.NullPointerException if the argument is <code>null</code>
     */
    public RoutingDefinitionVO(RoutingDefinitionVO otherBean)
    {
        this(otherBean.getTxnId(), otherBean.getRoutingDefinitionId(), otherBean.getOldRoutingDefinitionId(), otherBean.getButtonName(), otherBean.getCompletedTxnStep(), otherBean.getEscalateAfter(), otherBean.getPendingStepsOverride(), otherBean.getPendingTxnSteps(), otherBean.getRoutingCriterion(), otherBean.getTransitionDirection(), otherBean.getDeleteParallelFlow(),otherBean.getEndPoint(), otherBean.getPreviousStepsRequired(), otherBean.getAttributesMappingList(), otherBean.getUserStepForPendingTxnSteps(), otherBean.getMailingOptionsVO(), otherBean.getQcRoute());
    }

    /**
     * Copies all properties from the argument value object into this value object.
     */
    public void copy(RoutingDefinitionVO otherBean)
    {
        if (otherBean != null)
        {
            this.setTxnId(otherBean.getTxnId());
            this.setRoutingDefinitionId(otherBean.getRoutingDefinitionId());
            this.setOldRoutingDefinitionId(otherBean.getOldRoutingDefinitionId());
            this.setButtonName(otherBean.getButtonName());
            this.setCompletedTxnStep(otherBean.getCompletedTxnStep());
            this.setEscalateAfter(otherBean.getEscalateAfter());
            this.setPendingStepsOverride(otherBean.getPendingStepsOverride());
            this.setPendingTxnSteps(otherBean.getPendingTxnSteps());
            this.setRoutingCriterion(otherBean.getRoutingCriterion());
            this.setTransitionDirection(otherBean.getTransitionDirection());
            this.setDeleteParallelFlow(otherBean.getDeleteParallelFlow());
            this.setEndPoint(otherBean.getEndPoint());
            this.setPreviousStepsRequired(otherBean.getPreviousStepsRequired());
            this.setAttributesMappingList(otherBean.getAttributesMappingList());
            this.setUserStepForPendingTxnSteps(otherBean.getUserStepForPendingTxnSteps());
            this.setMailingOptionsVO(otherBean.getMailingOptionsVO());
        }
    }

    private java.lang.Long txnId;

    /**
     * 
     */
    public java.lang.Long getTxnId()
    {
        return this.txnId;
    }

    public void setTxnId(java.lang.Long txnId)
    {
        this.txnId = txnId;
    }

    private java.lang.Long routingDefinitionId;

    /**
     * 
     */
    public java.lang.Long getRoutingDefinitionId()
    {
        return this.routingDefinitionId;
    }

    public void setRoutingDefinitionId(java.lang.Long routingDefinitionId)
    {
        this.routingDefinitionId = routingDefinitionId;
    }

    private java.lang.Long oldRoutingDefinitionId;

    /**
     * 
     */
    public java.lang.Long getOldRoutingDefinitionId()
    {
        return this.oldRoutingDefinitionId;
    }

    public void setOldRoutingDefinitionId(java.lang.Long oldRoutingDefinitionId)
    {
        this.oldRoutingDefinitionId = oldRoutingDefinitionId;
    }

    private java.lang.String buttonName;

    /**
     * 
     */
    public java.lang.String getButtonName()
    {
        return this.buttonName;
    }

    public void setButtonName(java.lang.String buttonName)
    {
        this.buttonName = buttonName;
    }

    private java.lang.Long completedTxnStep;

    /**
     * 
     */
    public java.lang.Long getCompletedTxnStep()
    {
        return this.completedTxnStep;
    }

    public void setCompletedTxnStep(java.lang.Long completedTxnStep)
    {
        this.completedTxnStep = completedTxnStep;
    }

    private java.lang.Long escalateAfter;

    /**
     * 
     */
    public java.lang.Long getEscalateAfter()
    {
        return this.escalateAfter;
    }

    public void setEscalateAfter(java.lang.Long escalateAfter)
    {
        this.escalateAfter = escalateAfter;
    }

    private java.lang.String pendingStepsOverride;

    /**
     * 
     */
    public java.lang.String getPendingStepsOverride()
    {
        return this.pendingStepsOverride;
    }

    public void setPendingStepsOverride(java.lang.String pendingStepsOverride)
    {
        this.pendingStepsOverride = pendingStepsOverride;
    }

    private java.lang.Long[] pendingTxnSteps;

    /**
     * 
     */
    public java.lang.Long[] getPendingTxnSteps()
    {
        return this.pendingTxnSteps;
    }

    public void setPendingTxnSteps(java.lang.Long[] pendingTxnSteps)
    {
        this.pendingTxnSteps = pendingTxnSteps;
    }

    private java.lang.String routingCriterion;

    /**
     * 
     */
    public java.lang.String getRoutingCriterion()
    {
        return this.routingCriterion;
    }

    public void setRoutingCriterion(java.lang.String routingCriterion)
    {
        this.routingCriterion = routingCriterion;
    }

    private java.lang.String transitionDirection;

    /**
     * 
     */
    public java.lang.String getTransitionDirection()
    {
        return this.transitionDirection;
    }

    public void setTransitionDirection(java.lang.String transitionDirection)
    {
        this.transitionDirection = transitionDirection;
    }

    private java.lang.String deleteParallelFlow;

    /**
     * 
     */
    public java.lang.String getDeleteParallelFlow()
    {
        return this.deleteParallelFlow;
    }

    public void setDeleteParallelFlow(java.lang.String deleteParallelFlow)
    {
        this.deleteParallelFlow = deleteParallelFlow;
    }

    private java.lang.Long previousStepsRequired;

    /**
     * 
     */
    public java.lang.Long getPreviousStepsRequired()
    {
        return this.previousStepsRequired;
    }

    public void setPreviousStepsRequired(java.lang.Long previousStepsRequired)
    {
        this.previousStepsRequired = previousStepsRequired;
    }

    private java.util.Collection attributesMappingList;

    /**
     * 
     */
    public java.util.Collection getAttributesMappingList()
    {
        return this.attributesMappingList;
    }

    public void setAttributesMappingList(java.util.Collection attributesMappingList)
    {
        this.attributesMappingList = attributesMappingList;
    }

    private java.lang.Long[] userStepForPendingTxnSteps;

    /**
     * 
     */
    public java.lang.Long[] getUserStepForPendingTxnSteps()
    {
        return this.userStepForPendingTxnSteps;
    }

    public void setUserStepForPendingTxnSteps(java.lang.Long[] userStepForPendingTxnSteps)
    {
        this.userStepForPendingTxnSteps = userStepForPendingTxnSteps;
    }

    private com.tcs.mighty.workflowapp.vo.MailingOptionsVO mailingOptionsVO;

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.MailingOptionsVO getMailingOptionsVO()
    {
        return this.mailingOptionsVO;
    }

    public void setMailingOptionsVO(com.tcs.mighty.workflowapp.vo.MailingOptionsVO mailingOptionsVO)
    {
        this.mailingOptionsVO = mailingOptionsVO;
    }

	private com.tcs.mighty.workflowapp.vo.RDSamplingVO rdSamplingVO;

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.RDSamplingVO getRdSamplingVO()
    {
        return this.rdSamplingVO;
    }

    public void setRdSamplingVO(com.tcs.mighty.workflowapp.vo.RDSamplingVO rdSamplingVO)
    {
        this.rdSamplingVO = rdSamplingVO;
    }
    
    private com.tcs.mighty.workflowapp.vo.FyiSettingsVO fyiSettingsVO;

	public com.tcs.mighty.workflowapp.vo.FyiSettingsVO getFyiSettingsVO() {
		return fyiSettingsVO;
	}

	public void setFyiSettingsVO(
			com.tcs.mighty.workflowapp.vo.FyiSettingsVO fyiSettingsVO) {
		this.fyiSettingsVO = fyiSettingsVO;
	}

private java.lang.String endPoint;

    /**
     * 
     */
    public java.lang.String getEndPoint()
    {
        return this.endPoint;
    }

    public void setEndPoint(java.lang.String endPoint)
    {
        this.endPoint = endPoint;
    }

    private java.lang.String qcRoute;

	public java.lang.String getQcRoute() {
		return qcRoute;
	}

	public void setQcRoute(java.lang.String qcRoute) {
		this.qcRoute = qcRoute;
	}
    
    

}