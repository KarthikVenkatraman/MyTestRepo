// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringService.vsl in andromda-spring-cartridge.
//
package com.tcs.mighty.workflowapp.service;

/**
 * 
 */
public interface WorkflowService
{

    /**
     * 
     */
    public java.util.Collection getWorklist(java.util.Collection roles, java.lang.String userId, java.lang.String businessUnitId, java.lang.Long clientId);

    /**
     * 
     */
    public java.util.Collection getTransactionInstanceHistory(java.lang.String instanceId);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO getRouteWorkflow(com.tcs.mighty.workflowapp.vo.RouteDetailsVO routeDetailsVO);

    /**
     * 
     */
    public java.util.Collection getButtons(java.lang.String stepName, java.lang.String transactionName, java.util.Map map, java.lang.Long clientId);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO claimWorkItem(java.lang.String workflowTransactionId, java.lang.String userId, java.lang.Boolean isAdmin);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO delegateWorkFlow(java.lang.String loginUserId, java.lang.String workflowTransactionId, java.lang.String userId, java.lang.String comments, java.lang.String releaseFlag, String pendingStep);

    /**
     * 
     */
    public java.util.Collection getProcess(java.lang.String userId, java.lang.String adminWorklist, java.lang.String startDate, java.lang.String endDate);

    /**
     * 
     */
    public java.util.Collection getAllMyActedWorkItem(java.lang.String userId , java.lang.String startDate, java.lang.String endDate);

    /**
     * 
     */
    public java.lang.Boolean holdWorkItem(java.lang.Long workflowTransactionId, java.lang.String comments);

    /**
     * 
     */
    public java.lang.Boolean releaseWorkItemFromHold(java.lang.Long workflowTransactionId);

    /**
     * 
     */
    public java.util.Collection getWorklistForHeldItems(java.util.Collection roles, java.lang.String userId, java.lang.String businessUnitId, java.lang.Long clientId, java.lang.String reassignButton);

    /**
     * 
     */
    public java.util.Collection getAdminWorklist(java.util.Collection roles, java.lang.String userId, java.lang.String businessUnitId, java.lang.Long clientId);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO terminateWorkflow(java.lang.String workflowTransactionId, java.lang.String userId, java.lang.String comments, java.lang.String instanceId);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO releaseWorkitem(java.lang.String workflowTransactionId, java.lang.String comments, java.lang.String actionTaken);

    /**
     * 
     */
    public java.lang.String getIsRoleCanBeReleased(java.lang.String workflowTransactionId);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.TransactionWorklistVO getUserAttributeValues(java.lang.String transactionName, java.lang.String userId);

    /**
     * 
     */
    public java.util.Collection createWorkflowParam(java.lang.String key, java.lang.Long workflowTxnId, java.lang.String value);

    /**
     * 
     */
    public java.util.Collection getAlertAuditDetails(java.lang.String actType, java.lang.String userId, java.lang.String workflowTxnId, java.lang.String instanceId);

    /**
     * 
     */
    public java.util.Collection getWorkItemByProcedureForAlert(java.lang.String actType, java.lang.String userId, java.util.Collection details);

    /**
     * 
     */
    public java.util.Collection updateWorkflowParam(java.lang.String key, java.lang.Long workflowTxnId, java.lang.String value);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO closeFYIWorkItem(java.lang.String workflowTransactionId);

    /**
     * 
     */
    public java.util.Collection getFYIItems(java.lang.String userId);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO escalateWorkItem(com.tcs.mighty.workflowapp.vo.NotificationVO notificationVO, com.tcs.mighty.workflowapp.vo.RouteDetailsVO routeDetailsVO);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO mailScheduler(com.tcs.mighty.workflowapp.vo.BatchJobQueueVO batchVO);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO exportRouteWorkFlow(java.lang.String workflowTransId, java.lang.String instanceId, java.lang.String routingCriterian, java.lang.String userId);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.ImportDataVO importRouteWorkFlow(com.tcs.mighty.workflowapp.vo.ImportDataVO importDataVO);

    /**
     * 
     */
    public java.util.Collection getImportableAttributeOrderByCsvIndex(java.lang.Long businessEntityId);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO bulkAction(java.lang.String workflowTransId, java.lang.String instanceId, java.lang.String decisionLogic, java.lang.String userId);

    /**
     * 
     */
    public java.util.Collection populateAllAttributes(java.lang.Long businessEntityId);

    /**
     * 
     */
    public void saveAllAttributesIndex(java.util.Collection attributes);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.XmlDataVO validateFormDataWebService(com.tcs.mighty.workflowapp.vo.XmlDataVO xmlData);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.ImportDataVO getWorklistForBatchExportAndImport(com.tcs.mighty.workflowapp.vo.ImportDataVO dataVO);

    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.StatusVO bulkReassignWorkFlow(java.lang.String workflowTransactionIdCSV, java.lang.String toUserId, java.lang.String adminUserId);
    
    /**
     * 
     */
    public com.tcs.mighty.workflowapp.vo.BatchImportVO getDetailsForAutoInitialImport(java.lang.String client, java.lang.String transName);
    
	/**
     * 
     */
    public void escalationMailBatch();
    
    
    public void QCRoutescheduler();
    
    public void qcRulesBatch();

}
